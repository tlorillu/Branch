apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

//File name for out put jar created
def jarFileName

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.android.installreferrer:installreferrer:2.1'

    // --- optional dependencies -----
    //Please note that the Branch SDK does not require any of the below optional dependencies to operate. This dependency is listed here so there will not be build errors,
    // but the library is *not* added to your app unless you do so yourself. Please check the code in gradle-mvn-push script to see how this works

    implementation 'com.google.firebase:firebase-appindexing:19.0.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // assume partner has it
    androidTestImplementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20201115'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_MINIMUM)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }
}

//------------- Jar Generation code. ---------------//
//Run makeJar to create a jar file for SDK to the route directory
task clearJar(type: Delete) {
    delete 'build/libs/'+ jarFileName
}

task makeJar(type: Copy) {
    from('build/intermediates/intermediate-jars/release/')
    into('../')
    include('classes.jar')
    rename ('classes.jar', 'Branch-'+project.VERSION_NAME+'.jar')
}

makeJar.dependsOn(clearJar, build)

apply from: 'https://raw.githubusercontent.com/BranchMetrics/GradleToMavenOptionalDependencies/master/gradle-maven-push.gradle'

project.afterEvaluate {
    publishing {
        publications {
            library(MavenPublication) {
                setGroupId project.GROUP
                setArtifactId project.POM_ARTIFACT_ID
                version android.defaultConfig.versionName
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

                //if lib contains subdendepndecies
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}